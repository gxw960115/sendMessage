<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.message.sendmessage.mapper.EmailAddressMapper">

    <resultMap id="emailAddressResult" type="com.message.sendmessage.entity.EmailAddress">
        <id property="id" jdbcType="INTEGER" column="id"/>
        <result property="emailNumber" jdbcType="VARCHAR" column="email_number"/>
        <result property="transceiverType" jdbcType="INTEGER" column="transceiver_type"/>
        <result property="emailType" jdbcType="INTEGER" column="email_type"/>
        <result property="identification" jdbcType="VARCHAR" column="identification"/>
    </resultMap>

<!--    <resultMap id="detailedBlogResultMap" type="Blog">-->
    <!--        <constructor>-->
    <!--            <idArg column="blog_id" javaType="int"/>-->
    <!--        </constructor>-->
    <!--        <result property="title" column="blog_title"/>-->
    <!--        <association property="author" javaType="Author">-->
    <!--            <id property="id" column="author_id"/>-->
    <!--            <result property="username" column="author_username"/>-->
    <!--            <result property="password" column="author_password"/>-->
    <!--            <result property="email" column="author_email"/>-->
    <!--            <result property="bio" column="author_bio"/>-->
    <!--            <result property="favouriteSection" column="author_favourite_section"/>-->
    <!--        </association>-->
    <!--        <collection property="posts" ofType="Post">-->
    <!--            <id property="id" column="post_id"/>-->
    <!--            <result property="subject" column="post_subject"/>-->
    <!--            <association property="author" javaType="Author"/>-->
    <!--            <collection property="comments" ofType="Comment">-->
    <!--                <id property="id" column="comment_id"/>-->
    <!--            </collection>-->
    <!--            <collection property="tags" ofType="Tag" >-->
    <!--                <id property="id" column="tag_id"/>-->
    <!--            </collection>-->
    <!--            <discriminator javaType="int" column="draft">-->
    <!--                <case value="1" resultType="DraftPost"/>-->
    <!--            </discriminator>-->
    <!--        </collection>-->
    <!--    </resultMap>-->
    <!--    <select id="selectBlogDetails" resultMap="detailedBlogResultMap">-->
    <!--        select-->
    <!--            B.id as blog_id,-->
    <!--            B.title as blog_title,-->
    <!--            B.author_id as blog_author_id,-->
    <!--            A.id as author_id,-->
    <!--            A.username as author_username,-->
    <!--            A.password as author_password,-->
    <!--            A.email as author_email,-->
    <!--            A.bio as author_bio,-->
    <!--            A.favourite_section as author_favourite_section,-->
    <!--            P.id as post_id,-->
    <!--            P.blog_id as post_blog_id,-->
    <!--            P.author_id as post_author_id,-->
    <!--            P.created_on as post_created_on,-->
    <!--            P.section as post_section,-->
    <!--            P.subject as post_subject,-->
    <!--            P.draft as draft,-->
    <!--            P.body as post_body,-->
    <!--            C.id as comment_id,-->
    <!--            C.post_id as comment_post_id,-->
    <!--            C.name as comment_name,-->
    <!--            C.comment as comment_text,-->
    <!--            T.id as tag_id,-->
    <!--            T.name as tag_name-->
    <!--        from Blog B-->
    <!--                 left outer join Author A on B.author_id = A.id-->
    <!--                 left outer join Post P on B.id = P.blog_id-->
    <!--                 left outer join Comment C on P.id = C.post_id-->
    <!--                 left outer join Post_Tag PT on PT.post_id = P.id-->
    <!--                 left outer join Tag T on PT.tag_id = T.id-->
    <!--        where B.id = #{id}-->
    <!--    </select>-->
    <sql id="emailaddresscol">
        id
        ,email_number,transceiver_type,email_type,identification
    </sql>

    <select id="search" parameterType="com.message.sendmessage.entity.EmailAddress" resultMap="emailAddressResult">
        select
        <include refid="emailaddresscol"/>
        from email_address
    </select>

    <insert id="save" parameterType="com.message.sendmessage.entity.EmailAddress">
        insert into email_address (
        <if test="emailNumber != null and emailNumber != ''">email_number,</if>
        <if test="transceiverType != null and transceiverType != ''">transceiver_type,</if>
        <if test="identification != null and identification != ''">identification,</if>
        <if test="emailType != null and emailType != ''">email_type</if>)
        values (
        <if test="emailNumber != null and emailNumber != ''">#{emailNumber},</if>
        <if test="transceiverType != null and transceiverType !=''">#{transceiverType},</if>
        <if test="identification != null and identification !=''">#{identification},</if>
        <if test="emailType != null and emailType != ''">#{emailType}</if>)
    </insert>

    <update id="upd" parameterType="com.message.sendmessage.entity.EmailAddress">
        update email_address set
        <if test="emailNumber!=null and emailNumber !=''">email_number = #{emailNumber}</if>
        <if test="transceiverType!=null and transceiverType !=''">,transceiver_type = #{transceiverType}</if>
        --
        <if test="identification!=null and identification !=''">,identification = #{identification}</if>
        <if test="emailType!=null and emailType !=''">,email_type = #{emailType}</if>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="delBach" parameterType="java.util.List">
        delete from email_address
        <where>
            id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </delete>
</mapper>